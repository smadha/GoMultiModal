Fitting 5 folds for each of 110 candidates, totalling 550 fits

Best parameters set found on development set:

{'kernel': 'rbf', 'C': 4, 'gamma': 0.0625}

Grid scores on development set:

mean 	std 		params
0.362 (+/-0.011) for {'kernel': 'poly', 'C': 0.015625, 'degree': 1}
0.362 (+/-0.011) for {'kernel': 'poly', 'C': 0.015625, 'degree': 2}
0.357 (+/-0.026) for {'kernel': 'poly', 'C': 0.015625, 'degree': 3}
0.415 (+/-0.054) for {'kernel': 'poly', 'C': 0.0625, 'degree': 1}
0.388 (+/-0.095) for {'kernel': 'poly', 'C': 0.0625, 'degree': 2}
0.371 (+/-0.049) for {'kernel': 'poly', 'C': 0.0625, 'degree': 3}
0.460 (+/-0.086) for {'kernel': 'poly', 'C': 0.25, 'degree': 1}
0.446 (+/-0.110) for {'kernel': 'poly', 'C': 0.25, 'degree': 2}
0.455 (+/-0.067) for {'kernel': 'poly', 'C': 0.25, 'degree': 3}
0.451 (+/-0.132) for {'kernel': 'poly', 'C': 1, 'degree': 1}
0.478 (+/-0.139) for {'kernel': 'poly', 'C': 1, 'degree': 2}
0.446 (+/-0.092) for {'kernel': 'poly', 'C': 1, 'degree': 3}
0.451 (+/-0.125) for {'kernel': 'poly', 'C': 4, 'degree': 1}
0.446 (+/-0.144) for {'kernel': 'poly', 'C': 4, 'degree': 2}
0.455 (+/-0.074) for {'kernel': 'poly', 'C': 4, 'degree': 3}
0.442 (+/-0.097) for {'kernel': 'poly', 'C': 16, 'degree': 1}
0.451 (+/-0.092) for {'kernel': 'poly', 'C': 16, 'degree': 2}
0.460 (+/-0.101) for {'kernel': 'poly', 'C': 16, 'degree': 3}
0.446 (+/-0.110) for {'kernel': 'poly', 'C': 64, 'degree': 1}
0.469 (+/-0.070) for {'kernel': 'poly', 'C': 64, 'degree': 2}
0.482 (+/-0.187) for {'kernel': 'poly', 'C': 64, 'degree': 3}
0.446 (+/-0.108) for {'kernel': 'poly', 'C': 256, 'degree': 1}
0.455 (+/-0.060) for {'kernel': 'poly', 'C': 256, 'degree': 2}
0.464 (+/-0.096) for {'kernel': 'poly', 'C': 256, 'degree': 3}
0.442 (+/-0.102) for {'kernel': 'poly', 'C': 1024, 'degree': 1}
0.473 (+/-0.097) for {'kernel': 'poly', 'C': 1024, 'degree': 2}
0.460 (+/-0.074) for {'kernel': 'poly', 'C': 1024, 'degree': 3}
0.433 (+/-0.113) for {'kernel': 'poly', 'C': 4096, 'degree': 1}
0.415 (+/-0.111) for {'kernel': 'poly', 'C': 4096, 'degree': 2}
0.451 (+/-0.094) for {'kernel': 'poly', 'C': 4096, 'degree': 3}
0.438 (+/-0.110) for {'kernel': 'poly', 'C': 16384, 'degree': 1}
0.411 (+/-0.114) for {'kernel': 'poly', 'C': 16384, 'degree': 2}
0.451 (+/-0.094) for {'kernel': 'poly', 'C': 16384, 'degree': 3}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 6.103515625e-05}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.000244140625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.0009765625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.00390625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.015625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.0625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.015625, 'gamma': 0.25}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 6.103515625e-05}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.000244140625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.0009765625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.00390625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.015625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.0625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.0625, 'gamma': 0.25}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 6.103515625e-05}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.000244140625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.0009765625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.00390625}
0.397 (+/-0.055) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.015625}
0.464 (+/-0.066) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.0625}
0.384 (+/-0.060) for {'kernel': 'rbf', 'C': 0.25, 'gamma': 0.25}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'gamma': 6.103515625e-05}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.000244140625}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.0009765625}
0.411 (+/-0.091) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.00390625}
0.478 (+/-0.083) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.015625}
0.509 (+/-0.177) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.0625}
0.491 (+/-0.114) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.25}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 4, 'gamma': 6.103515625e-05}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.000244140625}
0.415 (+/-0.097) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.0009765625}
0.455 (+/-0.062) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.00390625}
0.455 (+/-0.110) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.015625}
0.518 (+/-0.085) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.0625}
0.487 (+/-0.074) for {'kernel': 'rbf', 'C': 4, 'gamma': 0.25}
0.362 (+/-0.011) for {'kernel': 'rbf', 'C': 16, 'gamma': 6.103515625e-05}
0.415 (+/-0.097) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.000244140625}
0.451 (+/-0.085) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.0009765625}
0.464 (+/-0.174) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.00390625}
0.500 (+/-0.105) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.015625}
0.504 (+/-0.144) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.0625}
0.491 (+/-0.103) for {'kernel': 'rbf', 'C': 16, 'gamma': 0.25}
0.415 (+/-0.097) for {'kernel': 'rbf', 'C': 64, 'gamma': 6.103515625e-05}
0.451 (+/-0.085) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.000244140625}
0.455 (+/-0.125) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.0009765625}
0.460 (+/-0.104) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.00390625}
0.500 (+/-0.083) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.015625}
0.478 (+/-0.162) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.0625}
0.469 (+/-0.126) for {'kernel': 'rbf', 'C': 64, 'gamma': 0.25}
0.451 (+/-0.085) for {'kernel': 'rbf', 'C': 256, 'gamma': 6.103515625e-05}
0.451 (+/-0.132) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.000244140625}
0.469 (+/-0.080) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.0009765625}
0.491 (+/-0.111) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.00390625}
0.491 (+/-0.147) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.015625}
0.487 (+/-0.102) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.0625}
0.460 (+/-0.119) for {'kernel': 'rbf', 'C': 256, 'gamma': 0.25}
0.455 (+/-0.128) for {'kernel': 'rbf', 'C': 1024, 'gamma': 6.103515625e-05}
0.451 (+/-0.106) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.000244140625}
0.460 (+/-0.200) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.0009765625}
0.473 (+/-0.096) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.00390625}
0.487 (+/-0.132) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.015625}
0.455 (+/-0.093) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.0625}
0.460 (+/-0.131) for {'kernel': 'rbf', 'C': 1024, 'gamma': 0.25}
0.460 (+/-0.079) for {'kernel': 'rbf', 'C': 4096, 'gamma': 6.103515625e-05}
0.469 (+/-0.080) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.000244140625}
0.487 (+/-0.103) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.0009765625}
0.500 (+/-0.110) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.00390625}
0.473 (+/-0.143) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.015625}
0.438 (+/-0.109) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.0625}
0.460 (+/-0.131) for {'kernel': 'rbf', 'C': 4096, 'gamma': 0.25}
0.460 (+/-0.134) for {'kernel': 'rbf', 'C': 16384, 'gamma': 6.103515625e-05}
0.464 (+/-0.149) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.000244140625}
0.473 (+/-0.085) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.0009765625}
0.487 (+/-0.132) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.00390625}
0.433 (+/-0.038) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.015625}
0.442 (+/-0.105) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.0625}
0.460 (+/-0.131) for {'kernel': 'rbf', 'C': 16384, 'gamma': 0.25}

Detailed classification report on test data:
             precision    recall  f1-score   support

       -1.0       0.77      0.43      0.56        23
        0.0       0.60      0.75      0.67        20
        1.0       0.44      0.62      0.52        13

avg / total       0.63      0.59      0.59        56


